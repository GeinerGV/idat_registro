{"version":3,"sources":["../scripts/registro-navs.jsx"],"names":["REGISTRO_REF","React","createRef","RegNavs","props","handleAsesor","bind","registro_form","e","current","handleAsesorChange","asesores","length","asesor_ref","concat","map","asesor","Component","AsesorOption","Navs"],"mappings":"oyCAAA,GAAIA,cAAeC,MAAMC,SAAN,EAAnB,C,GAEMC,Q,gEACF,iBAAYC,KAAZ,CAAmB,uIACTA,KADS,GAErB,MAAKC,YAAL,CAAoB,MAAKA,YAAL,CAAkBC,IAAlB,OAApB,CACA,MAAKC,aAAL,CAAqBP,YAArB,CAHqB,YAIlB,C,sEACSQ,C,CAAG,CACf,GAAI,KAAKD,aAAL,CAAmBE,OAAvB,CAAgC,KAAKF,aAAL,CAAmBE,OAAnB,CAA2BC,kBAA3B,EAChC,C,uCACY,CACN,MACI,qBAAC,KAAD,CAAO,QAAP,MACI,2BAAK,UAAU,0BAAf,CAA0C,KAAK,QAA/C,EACI,2BAAK,UAAU,YAAf,EACG,KAAKN,KAAL,CAAWO,QAAX,CAAoBC,MAApB,CAA2B,CAA3B,CAChB,8BAAQ,UAAU,cAAlB,CAAiC,SAAU,KAAKP,YAAhD,CAA8D,IAAK,KAAKD,KAAL,CAAWS,UAA9E,EAA2F,CAAC,EAAD,EAAKC,MAAL,CAAY,KAAKV,KAAL,CAAWO,QAAvB,EAAiCI,GAAjC,CAAqC,SAACC,MAAD,QAAY,qBAAC,YAAD,EAAc,OAAQA,MAAtB,CAA8B,IAAKA,MAAnC,EAAZ,CAArC,CAA3F,CADgB,CAGhB,6BAAO,KAAK,QAAZ,CAAqB,IAAK,KAAKZ,KAAL,CAAWS,UAArC,CAAiD,SAAU,KAAKR,YAAhE,CAA8E,MAAO,KAAKD,KAAL,CAAWO,QAAX,CAAoB,CAApB,CAArF,EAJa,CADJ,CADJ,CAYP,C,oBAvBiBV,MAAMgB,S,EA0B5B,QAASC,aAAT,CAAsBd,KAAtB,CAA6B,CACzB,MAAO,+BAAQ,MAAOA,MAAMY,MAArB,EAA8BZ,MAAMY,MAAN,CAAeZ,MAAMY,MAArB,CAA8B,qBAA5D,CACV,CAMD,GAAIG,MAAOhB,OAAX","file":"registro-navs.js","sourcesContent":["var REGISTRO_REF = React.createRef();\n\nclass RegNavs extends React.Component {\n    constructor(props) {\n        super(props);\n\t\tthis.handleAsesor = this.handleAsesor.bind(this);\n\t\tthis.registro_form = REGISTRO_REF;\n    }\n\thandleAsesor(e) {\n\t\tif (this.registro_form.current) this.registro_form.current.handleAsesorChange();\n\t}\n    render () {\n        return (\n            <React.Fragment>\n                <div className=\"navbar-form navbar-right\" role=\"search\">\n                    <div className=\"form-group\">\n                    \t{ this.props.asesores.length>1 ? (\n\t\t\t\t\t\t\t<select className=\"form-control\" onChange={this.handleAsesor} ref={this.props.asesor_ref}>{[\"\"].concat(this.props.asesores).map((asesor) => <AsesorOption asesor={asesor} key={asesor} />)}</select>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<input type=\"hidden\" ref={this.props.asesor_ref} onChange={this.handleAsesor} value={this.props.asesores[0]} />\n\t\t\t\t\t\t)}\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nfunction AsesorOption(props) {\n    return <option value={props.asesor}>{props.asesor ? props.asesor : \"selecione un asesor\"}</option>\n}\n\n/* var getDataNavs = function(r_ele) {\n    r_ele.setState({navs: <RegNavs {...r_ele.state.navbar_props} />});\n} */\n\nvar Navs = RegNavs;\n"]}